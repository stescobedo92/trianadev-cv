image: node:10.16.3

stages:
  - dependencies
  - build
  - deploy

# Base build
.build: &build
  tags:
    - docker
  stage: build
  dependencies:
    - dependencies
  artifacts:
    expire_in: 30 days
    when: on_success
    paths:
      - dist/
      - .env

# Base deployment
.deploy: &deploy
  image: ubuntu:18.04
  tags:
    - docker
  stage: deploy
  before_script:
    - apt -qq update && apt -qq install ssh rsync -y
    - mkdir -p ~/.ssh/
    - echo "$DEPLOY_SSH_PV_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - shopt -s expand_aliases
    - alias ex='ssh guille@guilledev.com'

# Dependencies
dependencies:
  tags:
    - docker
  stage: dependencies
  script:
    - npm config set registry ${W_NPM_REGISTRY}
    - npm install
  artifacts:
    expire_in: 30 days
    when: on_success
    paths:
      - node_modules/

# Build project for production deployment
build:prod:
  <<: *build
  script:
    - echo "CV_PORT=$CV_PORT" > .env
    - npm run build
  only:
    refs:
      - master

# Deploy project
deploy:
  <<: *deploy
  dependencies:
    - build:prod
  script:
    - ex "rm -rf mycv/release/*"
    - rsync -a ./.env guille@guilledev.com:~/mycv/release/
    - rsync -a ./dist guille@guilledev.com:~/mycv/release/
    - rsync -a ./nginx.conf guille@guilledev.com:~/mycv/release/
    - rsync -a ./Dockerfile guille@guilledev.com:~/mycv/release/
    - rsync -a ./docker-compose.yml guille@guilledev.com:~/mycv/release/
    - ex "cd mycv/release/ && docker-compose --project-name=mycv-prod build"
    - ex "cd mycv/release/ && docker-compose --project-name=mycv-prod down"
    - ex "cd mycv/release/ && docker-compose --project-name=mycv-prod up -d"
  only:
    refs:
      - master
